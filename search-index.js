var searchIndex = new Map(JSON.parse('[\
["pharmsol",{"t":"ECQQQQCCEEECCCCCFKNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNPFFFGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPFGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGFPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEECCCEEEEEEEHHHHHEFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNHNONNNNNNNNNNNNNNNNNNNNNNPIIIIGIIIIPIPINNNNNNNNCNNNNNNNNNNNNNHNNNNNNNKKMM","n":["SubjectBuilderExt","data","fa","fetch_cov","fetch_params","lag","prelude","simulator","Data","Occasion","Subject","builder","covariate","error_model","event","structs","SubjectBuilder","SubjectBuilderExt","bolus","borrow","borrow_mut","build","builder","clone","clone_into","clone_to_uninit","covariate","deref","deref_mut","drop","event","fmt","from","from_subset","infusion","init","into","is_in_subset","observation","observation_with_error","repeat","reset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CarryForward","Covariate","CovariateSegment","Covariates","InterpolationMethod","Linear","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","covariates","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","get_covariate","init","init","init","init","interpolate","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","method","name","new","segments","to","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","intercept","slope","value","Add","ErrorModel","ErrorType","Prop","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_subset","from_subset","init","init","into","into","is_in_subset","is_in_subset","new","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Bolus","Bolus","Event","Infusion","Infusion","Observation","Observation","amount","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","duration","errorpoly","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","ignore","init","init","init","init","input","input","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","outeq","time","time","time","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","Data","Occasion","Subject","add_subject","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","estimate_theta","events","expand","filter_exclude","filter_include","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","get_covariates","get_events","get_subjects","hash","id","index","init","init","init","into","into","into","is_in_subset","is_in_subset","is_in_subset","new","occasions","optimal_support_point","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_pmetrics","EstimateTheta","OptimalSupportPoint","SubjectBuilderExt","data","models","simulator","Covariates","Data","ErrorModel","ErrorType","Event","Occasion","Subject","read_pmetrics","one_compartment","one_compartment_with_absorption","two_compartments","two_compartments_with_absorption","Equation","PopulationPredictions","Prediction","SubjectPredictions","absolute_error","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","errorpoly","flat_observations","flat_predictions","flat_time","fmt","fmt","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","get_predictions","init","init","init","into","into","into","is_in_subset","is_in_subset","is_in_subset","likelihood","observation","outeq","percentage_error","pf_psi","prediction","prediction_error","psi","squared_error","subject_predictions","time","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Analytical","AnalyticalEq","DiffEq","Diffusion","Drift","Equation","Fa","Init","Lag","Neqs","ODE","Out","SDE","SecEq","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fitting","fmt","from","from_subset","init","into","is_in_subset","is_sde","new_analytical","new_ode","new_sde","particle_filter","simulate_subject","simulate_trajectories","simulator","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","EstimateTheta","OptimalSupportPoint","estimate_theta","optimal_support_point"],"q":[[0,"pharmsol"],[8,"pharmsol::data"],[16,"pharmsol::data::builder"],[49,"pharmsol::data::covariate"],[157,"pharmsol::data::covariate::InterpolationMethod"],[160,"pharmsol::data::error_model"],[207,"pharmsol::data::event"],[316,"pharmsol::data::structs"],[408,"pharmsol::prelude"],[414,"pharmsol::prelude::data"],[422,"pharmsol::prelude::models"],[426,"pharmsol::prelude::simulator"],[513,"pharmsol::simulator"],[557,"pharmsol::simulator::fitting"],[561,"alloc::string"],[562,"core::convert"],[563,"core::fmt"],[564,"core::option"],[565,"core::result"],[566,"core::any"],[567,"std::collections::hash::map"],[568,"serde::de"],[569,"alloc::vec"],[570,"ndarray::aliases"],[571,"std::fs"],[572,"nalgebra::base::alias"],[573,"pharmsol::simulator::likelihood"],[574,"pharmsol::data::parse_pmetrics"],[575,"pharmsol::simulator::analytical"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,54,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,18,0,0,0,0,18,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,21,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,20,21,21,18,19,19,20,21,18,19,20,21,21,18,19,20,21,20,18,19,20,21,18,19,20,21,19,20,21,20,19,18,19,20,21,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,55,55,56,27,0,0,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,26,27,26,27,26,27,26,27,26,27,26,27,26,27,0,10,0,0,10,0,10,28,29,10,28,29,30,10,28,29,30,10,28,29,30,10,28,29,30,10,28,29,30,10,28,29,30,10,28,29,30,10,28,29,30,10,28,29,30,29,30,10,10,28,29,30,10,28,29,30,10,28,29,30,30,10,28,29,30,28,29,10,28,29,30,10,28,29,30,30,28,29,30,10,28,29,30,10,10,28,29,30,10,28,29,30,10,28,29,30,10,28,29,30,10,28,29,30,30,10,28,29,30,0,0,0,31,31,6,32,31,6,32,6,31,6,32,31,6,32,31,6,32,31,31,6,32,31,6,32,6,32,31,6,32,31,32,31,31,31,31,31,6,6,32,32,31,6,32,31,6,32,32,32,31,6,6,32,31,6,32,31,6,32,31,6,32,31,6,6,31,6,32,31,6,32,31,6,32,31,6,32,31,6,32,31,6,32,31,6,32,31,6,32,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,41,40,39,41,40,39,40,39,40,39,40,39,39,41,40,39,41,40,39,41,40,39,41,40,39,39,40,40,40,40,39,39,41,41,40,40,39,41,40,39,40,41,40,39,41,40,39,41,40,39,39,39,39,39,0,39,39,0,39,41,39,40,39,39,41,40,39,41,40,39,41,40,39,41,40,39,41,40,39,41,40,39,33,0,0,0,0,0,0,0,0,0,33,0,33,0,33,33,33,33,33,33,33,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,0,33,33,33,33,33,33,33,0,0,52,53],"f":"``````````````````{{bddf}b}{{{h{c}}}{{h{e}}}{}{}}{{{h{jc}}}{{h{je}}}{}{}}{bl}{cb{{A`{n}}}}{{{h{b}}}b}{{{h{c}}{h{je}}}Ab{}{}}{{{h{c}}}Ab{}}{{bcdd}b{{A`{n}}}}{f{{h{c}}}{}}{f{{h{jc}}}{}}{fAb}{{bAd}b}{{{h{b}}{h{jAf}}}Ah}{cc{}}{{{h{c}}}e{}{}}{{bddfd}b}{{}f}{ce{}{}}{{{h{c}}}Aj{}}{{bddf}b}{{bddf{An{{Al{dddd}}}}Aj}b}{{bfd}b}{bb}8{{{h{c}}}{{An{e}}}{}{}}9{c{{B`{e}}}{}{}}0{{{h{c}}}Bb{}}8``````{{{h{c}}}{{h{e}}}{}{}}000{{{h{jc}}}{{h{je}}}{}{}}000{{{h{Bd}}}Bd}{{{h{Bf}}}Bf}{{{h{Bh}}}Bh}{{{h{Bj}}}Bj}{{{h{c}}{h{je}}}Ab{}{}}000{{{h{c}}}Ab{}}000{{{h{Bj}}}{{Bl{n{h{Bh}}}}}}{{}Bj}{f{{h{c}}}{}}000{f{{h{jc}}}{}}000{c{{B`{Bd}}}Bn}{c{{B`{Bf}}}Bn}{c{{B`{Bh}}}Bn}{c{{B`{Bj}}}Bn}{fAb}000{{{h{Bd}}{h{jAf}}}Ah}{{{h{Bf}}{h{jAf}}}Ah}{{{h{Bh}}{h{jAf}}}Ah}0{{{h{Bj}}{h{jAf}}}Ah}0{cc{}}{{{h{Bf}}}d}111{{{h{c}}}e{}{}}000{{{h{Bj}}{h{C`}}}{{An{{h{Bh}}}}}}{{}f}000{{{h{Bh}}d}{{An{d}}}}{ce{}{}}000{{{h{c}}}Aj{}}000{{{h{Bf}}}{{h{Bd}}}}{{{h{Bh}}}{{h{C`}}}}{{}Bj}{{{h{Bh}}}{{Cb{{h{Bf}}}}}}:9999{{{h{c}}}n{}}0{{{h{c}}}{{An{e}}}{}{}}000;;;;{c{{B`{e}}}{}{}}0000000{{{h{c}}}Bb{}}0009999```````{{{h{c}}}{{h{e}}}{}{}}0{{{h{jc}}}{{h{je}}}{}{}}0{{{h{Cd}}}Cd}{{{h{Cf}}}Cf}{{{h{c}}{h{je}}}Ab{}{}}0{{{h{c}}}Ab{}}0{f{{h{c}}}{}}0{f{{h{jc}}}{}}0{fAb}0{{{h{Cd}}{h{jAf}}}Ah}{{{h{Cf}}{h{jAf}}}Ah}{cc{}}0{{{h{c}}}e{}{}}0{{}f}0{ce{}{}}0{{{h{c}}}Aj{}}0{{{Al{dddd}}d{h{Cf}}}Cd}44{{{h{c}}}{{An{e}}}{}{}}055{c{{B`{e}}}{}{}}000{{{h{c}}}Bb{}}055```````{{{h{Ch}}}d}{{{h{Cj}}}d}{{{h{c}}}{{h{e}}}{}{}}000{{{h{jc}}}{{h{je}}}{}{}}000{{{h{Ad}}}Ad}{{{h{Ch}}}Ch}{{{h{Cj}}}Cj}{{{h{Cl}}}Cl}{{{h{c}}{h{je}}}Ab{}{}}000{{{h{c}}}Ab{}}000{f{{h{c}}}{}}000{f{{h{jc}}}{}}000{c{{B`{Ad}}}Bn}{c{{B`{Ch}}}Bn}{c{{B`{Cj}}}Bn}{c{{B`{Cl}}}Bn}{fAb}000?{{{h{Cl}}}{{An{{Al{dddd}}}}}}{{{h{Ad}}{h{jAf}}}Ah}0{{{h{Ch}}{h{jAf}}}Ah}{{{h{Cj}}{h{jAf}}}Ah}{{{h{Cl}}{h{jAf}}}Ah}{cc{}}000{{{h{c}}}e{}{}}000{{{h{Cl}}}Aj}{{}f}000{{{h{Ch}}}f}{{{h{Cj}}}f}{ce{}{}}000{{{h{c}}}Aj{}}000{{{h{Cl}}}f}{{{h{Ch}}}d}{{{h{Cj}}}d}{{{h{Cl}}}d}::::{{{h{c}}}n{}}{{{h{c}}}{{An{e}}}{}{}}000<<<<{c{{B`{e}}}{}{}}0000000{{{h{c}}}Bb{}}00049999```{{{h{jCn}}l}Ab}{{{h{c}}}{{h{e}}}{}{}}00{{{h{jc}}}{{h{je}}}{}{}}00{cb{{A`{n}}}}{{{h{Cn}}}Cn}{{{h{l}}}l}{{{h{D`}}}D`}{{{h{c}}{h{je}}}Ab{}{}}00{{{h{c}}}Ab{}}00{{}Cn}{f{{h{c}}}{}}00{f{{h{jc}}}{}}00{c{{B`{l}}}Bn}{c{{B`{D`}}}Bn}{fAb}00{{{h{Cn}}{h{Db}}{h{{Dd{d}}}}}{{Df{d}}}}{{{h{D`}}}{{Cb{{h{Ad}}}}}}{{{h{Cn}}dd}Cn}{{{h{Cn}}{Cb{n}}}Cn}{{{h{Cn}}{h{{Cb{n}}}}}Cn}{{{h{Cn}}{h{jAf}}}Ah}0{{{h{l}}{h{jAf}}}Ah}0{{{h{D`}}{h{jAf}}}Ah}0{cc{}}00{{{h{c}}}e{}{}}00{{{h{D`}}}{{An{{h{Bj}}}}}}{{{h{D`}}{An{{h{{Bl{fd}}}}}}{An{{h{{Bl{fd}}}}}}Aj}{{Cb{Ad}}}}{{{h{Cn}}}{{Cb{{h{l}}}}}}{{{h{l}}}Dh}{{{h{l}}}{{h{n}}}}{{{h{D`}}}f}{{}f}00{ce{}{}}00{{{h{c}}}Aj{}}00{{{Cb{l}}}Cn}{{{h{l}}}{{Cb{{h{D`}}}}}}{{{h{l}}{h{Db}}{h{{Dd{d}}}}}{{Dd{d}}}}<<<{{{h{c}}}n{}}00{{{h{c}}}{{An{e}}}{}{}}00>>>{c{{B`{e}}}{}{}}00000{{{h{c}}}Bb{}}00888{{{h{Cn}}{h{Dj}}}Ab}`````````````{c{{B`{Cn`}}}{{A`{n}}}}{{{h{{Dl{d}}}}{h{{Dl{d}}}}d{Dl{d}}{h{Bj}}}{{Dl{d}}}}000````{{{h{Dn}}}d}{{{h{c}}}{{h{e}}}{}{}}00{{{h{jc}}}{{h{je}}}{}{}}00{{{h{E`}}}E`}{{{h{Dn}}}Dn}{{{h{c}}{h{je}}}Ab{}{}}0{{{h{c}}}Ab{}}00{{}Eb}{{}E`}{{}Dn}{f{{h{c}}}{}}00{f{{h{jc}}}{}}00{fAb}00{{{h{Dn}}}{{An{{Al{dddd}}}}}}{{{h{E`}}}{{Cb{d}}}}00{{{h{E`}}{h{jAf}}}Ah}{{{h{Dn}}{h{jAf}}}Ah}0{{{Df{E`}}}Eb}{cc{}}{{{Cb{Dn}}}E`}11{{{h{c}}}e{}{}}00{{{h{E`}}}{{h{{Cb{Dn}}}}}}{{}f}00{ce{}{}}00{{{h{c}}}Aj{}}00{{{h{Dn}}{h{Cd}}}d}{{{h{Dn}}}d}{{{h{Dn}}}f}1{{{h{Db}}{h{Cn}}{h{{Df{d}}}}{h{Cd}}fAjAj}{{Df{d}}}}22{{{h{Db}}{h{Cn}}{h{{Df{d}}}}{h{Cd}}AjAj}{{Df{d}}}}3`399{{{h{c}}}n{}}{{{h{c}}}{{An{e}}}{}{}}00;;;{c{{B`{e}}}{}{}}00000{{{h{c}}}Bb{}}00:::``````````````{{{h{c}}}{{h{e}}}{}{}}{{{h{jc}}}{{h{je}}}{}{}}{{{h{Db}}}Db}{{{h{c}}{h{je}}}Ab{}{}}{{{h{c}}}Ab{}}{f{{h{c}}}{}}{f{{h{jc}}}{}}{fAb}`{{{h{Db}}{h{jAf}}}Ah}{cc{}}{{{h{c}}}e{}{}}{{}f}{ce{}{}}{{{h{c}}}Aj{}}{{{h{Db}}}Aj}{{EdEfEhEjElEnF`}Db}{{FbEhEjElEnF`}Db}{{FdFfEhEjElEnF`}Db}{{{h{Db}}{h{l}}{h{{Cb{d}}}}f{h{Cd}}Aj}d}{{{h{Db}}{h{l}}{h{{Cb{d}}}}}E`}{{{h{Db}}{h{l}}{h{{Cb{d}}}}f}{{Cb{{Cb{d}}}}}}1:{{{h{c}}}{{An{e}}}{}{}};{c{{B`{e}}}{}{}}0{{{h{c}}}Bb{}};``{{{h{Fh}}{h{Db}}{h{{Dd{d}}}}}{{Df{d}}}}{{{h{Fj}}{h{Db}}{h{{Dd{d}}}}}{{Dd{d}}}}","D":"Jb","p":[[5,"SubjectBuilder",16],[1,"f64"],[1,"usize"],[1,"reference"],[0,"mut"],[5,"Subject",316],[5,"String",561],[10,"Into",562],[1,"unit"],[6,"Event",207],[5,"Formatter",563],[8,"Result",563],[1,"bool"],[1,"tuple"],[6,"Option",564],[6,"Result",565],[5,"TypeId",566],[6,"InterpolationMethod",49],[5,"CovariateSegment",49],[5,"Covariate",49],[5,"Covariates",49],[5,"HashMap",567],[10,"Deserializer",568],[1,"str"],[5,"Vec",569],[5,"ErrorModel",160],[6,"ErrorType",160],[5,"Bolus",207],[5,"Infusion",207],[5,"Observation",207],[5,"Data",316],[5,"Occasion",316],[6,"Equation",513],[8,"Array1",570],[8,"Array2",570],[1,"u64"],[5,"File",571],[8,"DVector",572],[5,"Prediction",426,573],[5,"SubjectPredictions",426,573],[5,"PopulationPredictions",426,573],[8,"AnalyticalEq",513],[8,"SecEq",513],[8,"Lag",513],[8,"Fa",513],[8,"Init",513],[8,"Out",513],[8,"Neqs",513],[8,"DiffEq",513],[8,"Drift",513],[8,"Diffusion",513],[10,"EstimateTheta",557],[10,"OptimalSupportPoint",557],[10,"SubjectBuilderExt",16],[15,"Linear",157],[15,"CarryForward",157]],"r":[[0,16],[8,316],[9,316],[10,316],[408,557],[409,557],[410,16],[414,49],[415,316],[416,160],[417,160],[418,207],[419,316],[420,316],[421,574],[422,575],[423,575],[424,575],[425,575],[426,513],[427,573],[428,573],[429,573],[485,573],[488,573]],"b":[[95,"impl-Debug-for-Covariate"],[96,"impl-Display-for-Covariate"],[97,"impl-Display-for-Covariates"],[98,"impl-Debug-for-Covariates"],[254,"impl-Debug-for-Event"],[255,"impl-Display-for-Event"],[353,"impl-Debug-for-Data"],[354,"impl-Display-for-Data"],[355,"impl-Display-for-Subject"],[356,"impl-Debug-for-Subject"],[357,"impl-Display-for-Occasion"],[358,"impl-Debug-for-Occasion"],[461,"impl-Debug-for-Prediction"],[462,"impl-Display-for-Prediction"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOABJQAAACAAIgACACYADAA2AC0AZQAAAGkACQB3AD8AuQADAL8AEADRAAAA1AAAANYAAADZACMA/wAEAAgBAwANAQMAFwEDAB8BGAA5AQMAQQEdAGIBBQBrAQQAcQEBAHQBAgB6AQIAfgEnAKsBAQCuASIA0gEAANUBBgDfASMABwIAAAwCAAAOAgAAEAIJABsCAQAeAhMA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
