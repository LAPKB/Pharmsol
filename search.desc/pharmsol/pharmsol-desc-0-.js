searchState.loadedDescShard("pharmsol", 0, "Returns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA Covariate is a collection of CovariateSegments, which …\nCovariates is a collection of Covariate\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn instantaenous input of drug\nAn Event can be a Bolus, Infusion, or Observation\nA continuous dose of drug\nAn observation of drug concentration or covariates\nGet the amount of the bolus, often the dose\nGet the total amount of drug provided over the infusion\nGet the duration of the infusion\nGet the error polynomial coefficients of the observation\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet whether the observation should be ignored\nGet the input compartment of the bolus, i.e. the …\nGet the input compartment of the infusion, i.e. the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the output equation number of the observation\nGet the time of the bolus\nGet the start time of the infusion\nGet the time of the observation\nGet the value of the observation, e.g. drug concentration\nData is a collection of Subjects, which are collections of …\nAn Occasion is a collection of events, for a given Subject…\nSubject is a collection of blocks for one individual\nAdd a Subject to the Data\nExpand the data by adding observations at intervals of …\nFilter the Data to exclude the Subjects with IDs in the …\nFilter the Data to include only the Subjects with IDs in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a vector of references to all Subjects in the Data\nGet the index of the occasion\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new Data object from a vector of Subjects\nRead a Pmetrics datafile and convert it to a Data object\nAnalytical for one compartment Assumptions:\nAnalytical for one compartment with absorption Assumptions:\nAnalytical for two compartment Assumptions:\nAnalytical for two compartment with absorption Assumptions:\nPrediction holds an observation and its prediction\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis closure represents an Analytical solution of the …\nThis closure represents the differential equation of the …\nThis closure represents the diffusion term of the model: …\nThis closure represents the drift term of the model: …\nThis closure represents the fraction absorbed (also called …\nThis closure represents the initial state of the system: …\nThis closure represents the lag time of the model, the lag …\nThe number of states and output equations of the model The …\nThis closure represents the output equation of the model: …\nThis closure represents the secondary equation of the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")